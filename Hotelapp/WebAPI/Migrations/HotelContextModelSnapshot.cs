// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Models.DB;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(HotelContext))]
    partial class HotelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GuestReservation", b =>
                {
                    b.Property<int>("GuestsPassnumber")
                        .HasColumnType("int");

                    b.Property<int>("ReservationsReservationId")
                        .HasColumnType("int");

                    b.HasKey("GuestsPassnumber", "ReservationsReservationId");

                    b.HasIndex("ReservationsReservationId");

                    b.ToTable("GuestReservation");
                });

            modelBuilder.Entity("Hotel.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Hotel.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("GuestPassnumber")
                        .HasColumnType("int");

                    b.Property<bool>("Payed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentTarget")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("BillId");

                    b.HasIndex("GuestPassnumber");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Hotel.Guest", b =>
                {
                    b.Property<int>("Passnumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("GuestPassnumber")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Passnumber");

                    b.HasIndex("AddressId");

                    b.HasIndex("GuestPassnumber");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Hotel.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Enddate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Startdate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ReservationId");

                    b.HasIndex("BillId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Hotel.Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BedCount")
                        .HasColumnType("int");

                    b.Property<bool>("HasBalcony")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasKitchen")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasTerrace")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("RoomID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ReservationRoom", b =>
                {
                    b.Property<int>("ReservationsReservationId")
                        .HasColumnType("int");

                    b.Property<int>("RoomsRoomID")
                        .HasColumnType("int");

                    b.HasKey("ReservationsReservationId", "RoomsRoomID");

                    b.HasIndex("RoomsRoomID");

                    b.ToTable("ReservationRoom");
                });

            modelBuilder.Entity("GuestReservation", b =>
                {
                    b.HasOne("Hotel.Guest", null)
                        .WithMany()
                        .HasForeignKey("GuestsPassnumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationsReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.Bill", b =>
                {
                    b.HasOne("Hotel.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestPassnumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("Hotel.Guest", b =>
                {
                    b.HasOne("Hotel.Address", "Address")
                        .WithMany("Guests")
                        .HasForeignKey("AddressId");

                    b.HasOne("Hotel.Guest", null)
                        .WithMany("Guests")
                        .HasForeignKey("GuestPassnumber");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Hotel.Reservation", b =>
                {
                    b.HasOne("Hotel.Bill", "Bill")
                        .WithMany("Reservations")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("ReservationRoom", b =>
                {
                    b.HasOne("Hotel.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationsReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomsRoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.Address", b =>
                {
                    b.Navigation("Guests");
                });

            modelBuilder.Entity("Hotel.Bill", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Hotel.Guest", b =>
                {
                    b.Navigation("Guests");
                });
#pragma warning restore 612, 618
        }
    }
}
